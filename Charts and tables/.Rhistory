w <- ggplot(data = final_data, aes(x = Genre, y = Gross...US ))
w
z <- w + geom_boxplot()
z
z <- w + geom_boxplot() + geom_jitter()
z
z <- w + geom_jitter() +
geom_boxplot()
z
z <- w + geom_jitter() +
geom_boxplot(alpha = 0.7)
z
z <- w + geom_jitter(aes(colour = Studio)) +
geom_boxplot(alpha = 0.7)
z
z <- w + geom_jitter(aes(size = Budget...mill. ,colour = Studio)) +
geom_boxplot(alpha = 0.7)
z
z <- w + geom_jitter(aes(size = Budget...mill. ,colour = Studio)) +
geom_boxplot(alpha = 0.7, outlier.colour = NA)
z
data_set <- read.csv(file.choose())
head(data_set)
summary(data_set)
data_set$numano <- factor(data_set$numano)
colnames(data_set)
colnames(data_set) <- c("Ano", "Mês", "Data da Emissão",
"Parlamentar" , "Partido",     "UF",
"Descrição",      "CPF/CNPJ do Fornecedor",        "Fornecedor",
"Valor do Documento",      "Valor Glosa",          "Valor Líquido")
colnames(data_set)
summary(data_set)
str(data_set)
data_set$`Data da Emissão` <-  as.Date(data_set$`Data da Emissão`, "%d%m%Y")
str(data_set)
data_set$`Data da Emissão`
data_set <- read.csv(file.choose())
data_set$numano <- factor(data_set$numano)
head(data_set)
summary(data_set)
str(data_set)
colnames(data_set) <- c("Ano", "Mês", "Data da Emissão",
"Parlamentar" , "Partido",     "UF",
"Descrição",      "CPF/CNPJ do Fornecedor",        "Fornecedor",
"Valor do Documento",      "Valor Glosa",          "Valor Líquido")
data_set$`Data da Emissão`
data_set$`Data da Emissão` <-  as.Date(data_set$`Data da Emissão`)
data_set$`Data da Emissão`
library(ggplot2)
graf_1 <- ggplot(data = data_set, aes(x = data_set$UF, y = data_set$Valor Líquido))
`
graf_1 <- ggplot(data = data_set, aes(x = data_set$UF, y = data_set$`Valor Líquido`))
graf_1 <- ggplot(data = data_set, aes(x = data_set$UF, y = data_set$`Valor Líquido`)
graf_1 + geom_point()
graf_1 <- ggplot(data = data_set, aes(x = data_set$UF, y = data_set$`Valor Líquido`)
graf_1 + geom_point()
graf_1 <- ggplot(data = data_set, aes(x = data_set$UF, y = data_set$`Valor Líquido`)
graf_1 + geom_point()
k <- ggplot(data = data_set, aes(x = data_set$UF, y = data_set$`Valor Líquido`)
k <- ggplot(data = data_set, aes(x = data_set$UF, y = data_set$`Valor Líquido`))
k + geom_point()
k <- ggplot(data = data_set, aes(x = data_set$UF, y = data_set$`Valor Líquido`))
k + geom_point()
k <- ggplot(data = data_set, aes(y = data_set$`Valor Líquido`))
k + geom_point()
k <- ggplot(data = data_set, aes(x = UF, y = data_set$`Valor Líquido`))
k + geom_point()
k <- ggplot(data = data_set, aes(x = data_set$`Valor Líquido`))
k + geom_point()
k + geom_histogram(aes(fill = UF))
k + geom_histogram()
k + geom_boxplot()
k <- ggplot(data = data_set, aes(x = UF , y = `Valor Líquido`))
k + geom_boxplot()
summary(data_set$Partido)
data_set$Partido <- factor(data_set$Partido)
summary(data_set$Partido)
data_set$UF <- factor(data_set$UF)
summary(data_set$UF)
filt <- (data_set$UF == SP)|(data_set$UF == RJ)|(data_set$UF == MG)|(data_set$UF == RS)|(data_set$UF == PR)|(data_set$UF == BA)
filt <- (data_set$UF == "SP")|(data_set$UF == "RJ")|(data_set$UF == "MG")|(data_set$UF == "RS")|(data_set$UF == "PR")|(data_set$UF == "BA")
data_set_uf <- data_set[filt, ]
k <- ggplot(data = data_set_uf, aes(x = UF , y = `Valor Líquido`))
k + geom_boxplot()
k + geom_jitter() + geom_boxplot()
k + geom_jitter() + geom_boxplot() + ylim(0,10000)
k + geom_jitter() + geom_boxplot() + ylim(0,5000)
k + geom_jitter() + geom_boxplot() + ylim(0,1000)
k + geom_jitter() + geom_boxplot() + ylim(0,500)
k + geom_jitter() + geom_boxplot() + ylim(0,300)
k + geom_point()
k <- ggplot(data = data_set_uf, aes(x = `Valor Líquido`), y = UF)
k +  geom_point()
k <- ggplot(data = data_set_uf, aes(x = `Valor Líquido`), y = UF)
k +  geom_point()
k <- ggplot(data = data_set_uf, aes(x = `Valor Líquido`), y = UF)
k +  geom_point()
k <- ggplot(data = data_set_uf, aes(x = `Valor Líquido`), y = UF))
k +  geom_point()
k <- ggplot(data = data_set_uf, aes(x = `Valor Líquido`, y = UF))
k +  geom_point()
k +  geom_jitter()
k +  geom_point()
k +  geom_point() +xlim(0, 15000)
filt_sp <- (data_set$UF == "SP")
data_set_sp <- data_set[filt_sp, ]
k <- ggplot(data = data_set_sp, aes(x = `Valor Líquido`, y = UF))
k +  geom_point() +xlim(0, 15000)
k +  geom_abline() +xlim(0, 15000)
k +  geom_bar() +xlim(0, 15000)
k +  geom_bar()
k <- ggplot(data = data_set_sp, aes(x = `Valor Líquido`, y = UF))
(
k <- ggplot(data = data_set_sp, aes(x = `Valor Líquido`, y = UF))
k +  geom_bar()
k <- ggplot(data = data_set_sp, aes(x = `Valor Líquido`))
k +  geom_bar()
k <- ggplot(data = data_set, aes( x = UF , y = `Valor Líquido`))
k +  geom_bar()
k <- ggplot(data = data_set, aes( y = `Valor Líquido`))
k +  geom_bar()
k <- ggplot(data = data_set, aes( x = `Valor Líquido`))
k <- ggplot(data = data_set_sp, aes( x = `Valor Líquido`))
k +  geom_bar()
data_set_uf <- data_set[filt, ]
L + geom_histogram()
L <- ggplot(data = data_set_uf, aes(x = `Valor Líquido`, colour = UF))
L + geom_histogram()
L <- ggplot(data = data_set_uf, aes(x = `Valor Líquido`))
L + geom_histogram()
L + geom_histogram(fill = UF)
L <- ggplot(data = data_set_uf, aes(x = `Valor Líquido`))
L + geom_histogram(fill = UF)
L + geom_histogram(aes(fill = UF)
L + geom_histogram(aes(fill = UF))
L <- ggplot(data = data_set_uf, aes(x = `Valor Líquido`))
L + geom_histogram(aes(fill = UF))
summary(data_set$UF)
summary(data_set$Partido)
L <- ggplot(data = data_set, aes(x = data_set$UF, y = data_set$`Valor Líquido`))
L + geom_bar()
L <- ggplot(data = data_set, aes(x = UF, y = `Valor Líquido`))
L + geom_bar()
L + geom_col()
L + geom_col(colour = "Blue")
L + geom_col(aes(colour = UF))
L + geom_jitter() + geom_col(aes(colour = UF))
L + geom_col(aes(colour = data_set$Partido))
L + geom_col(aes(colour = Partido))
ggplot(data = data_set, aes(x = UF, y = `Valor Líquido`)) +
geom_col(aes(colour = Partido))
ggplot(data = data_set, aes(x = UF, y = `Valor Líquido`)) +
geom_bar(aes(colour = Partido))
ggplot(data = data_set, aes(x = UF, y = `Valor Líquido`)) +
geom_(aes(fill = Partido))
ggplot(data = data_set, aes(x = UF, y = `Valor Líquido`)) +
geom_col(aes(fill = Partido))
ggplot(data = data_set, aes(x = UF, y = `Valor Líquido`)) +
geom_col(aes(fill = Partido))
ggplot(data = data_set, aes(x = UF, y = `Valor Líquido`)) +
geom_col(aes(fill = Partido), colour = "Black" )
ggplot(data = data_set, aes(x = UF, y = `Valor Líquido`)) +
geom_col(aes(fill = Partido))
ggplot(data = data_set, aes(x = UF, y = `Valor Líquido`)) +
geom_col(binwidth = 10, aes(fill = Partido))
ggplot(data = data_set, aes(x = UF, y = `Valor Líquido`)) +
geom_col(binwidth = 20, aes(fill = Partido))
ggplot(data = data_set, aes(x = UF, y = `Valor Líquido`)) +
geom_col(binwidth = 20, aes(fill = UF))
df <- na.omit(data_set)
ggplot(data = df, aes(x = UF, y = `Valor Líquido`)) +
geom_col(binwidth = 20, aes(fill = UF))
ggplot(data = df, aes(x = UF, y = `Valor Líquido`)) +
geom_col(binwidth = 20, aes(fill = UF)) + xlab("UF") +
ylab("Valor Líquido em (R$)") +
ggplot(data = df, aes(x = UF, y = `Valor Líquido`)) +
geom_col(binwidth = 20, aes(fill = UF)) + xlab("UF") +
ylab("Valor Líquido em (R$)") +
ggplot(data = df, aes(x = UF, y = `Valor Líquido`)) +
geom_col(binwidth = 20, aes(fill = UF)) + ylab("Valor Líquido em (R$)") +
ggplot(data = df, aes(x = UF, y = `Valor Líquido`)) +
geom_col(binwidth = 20, aes(fill = UF)) + ylab("Valor Líquido em (R$)") +
ggplot(data = df, aes(x = UF, y = `Valor Líquido`)) +
geom_col(binwidth = 20, aes(fill = UF)) + ylab("Valor Líquido em (R$)") +
ggplot(data = df, aes(x = UF, y = `Valor Líquido`)) +
geom_col(binwidth = 20, aes(fill = UF)) + ylab("Valor Líquido em (R$)")
ggplot(data = df, aes(x = UF, y = `Valor Líquido`)) +
geom_col(binwidth = 20, aes(fill = UF)) + ylab("Valor Líquido em R$")
k <- ggplot(data = df, aes(x = UF, y = `Valor Líquido`)) +
k + geom_col(binwidth = 20, aes(fill = UF)) +
ylab("Valor Líquido em R$") +
theme(axis.title.x = element_text(colour = "Black", size = 18),
axis.title.y = element_text(colour = "Black", size = 18 ),
legend.title = element_text(size=13),
legend.text = element_text(size = 12),
legend.position = c(1,1),
legend.justification = c(1,1))
theme(axis.title.x = element_text(colour = "Black", size = 18),
axis.title.y = element_text(colour = "Black", size = 18 ),
legend.title = element_text(size=13),
legend.text = element_text(size = 12),
legend.position = c(1,1),
legend.justification = c(1,1))
j +  theme(axis.title.x = element_text(colour = "Black", size = 18),
axis.title.y = element_text(colour = "Black", size = 18 ),
legend.title = element_text(size=13),
legend.text = element_text(size = 12),
legend.position = c(1,1),
legend.justification = c(1,1))
k <- ggplot(data = df, aes(x = UF, y = `Valor Líquido`)) +
j <- k + geom_col(binwidth = 20, aes(fill = UF)) +
ylab("Valor Líquido em R$")
k <- ggplot(data = df, aes(x = UF, y = `Valor Líquido`)) +
j <- k + geom_col(binwidth = 20, aes(fill = UF)) +
ylab("Valor Líquido em R$")
k <- ggplot(data = df, aes(x = UF, y = `Valor Líquido`)) +
k + geom_col(binwidth = 20, aes(fill = UF)) +
ylab("Valor Líquido em R$")
k <- ggplot(data = df, aes(x = UF, y = `Valor Líquido`)) +
k + geom_col(binwidth = 20, aes(fill = UF)) + ylab("Valor Líquido em R$")
k <- ggplot(data = df, aes(x = UF, y = `Valor Líquido`)) +
k + geom_col(binwidth = 20, aes(fill = UF)) + ylab("Valor Líquido em R$"))
k <- ggplot(data = df, aes(x = UF, y = `Valor Líquido`)) +
k + geom_col(binwidth = 20, aes(fill = UF)) + ylab("Valor Líquido em R$"))
k <- ggplot(data = df, aes(x = UF, y = `Valor Líquido`))
k + geom_col(binwidth = 20, aes(fill = UF)) + ylab("Valor Líquido em R$"))
k + geom_col(binwidth = 20, aes(fill = UF)) + ylab("Valor Líquido em R$")
k + geom_col(aes(fill = UF)) + ylab("Valor Líquido em R$")
k + geom_col(aes(fill = df$Fornecedor)) + ylab("Valor Líquido em R$")
k <- ggplot(data = df, aes(x = UF, y = `Valor Líquido`))
k + geom_col(aes(fill = df$Fornecedor)) + ylab("Valor Líquido em R$")
library(dplyr)
library(dbplyr)
library("dbplyr", lib.loc="~/R/win-library/4.0")
detach("package:dbplyr", unload=TRUE)
install.packages("dplyr")
library(dplyr)
remove("rlang")
remove(rlang)
install.packages("rlang")
remove.packages(r)lang
remove.packages(rlang)
remove.packages("rlang")
remove.packages("rlang", lib)
remove.packages("rlang")
remove.packages("dplyr")
install.packages("dplyr")
cbind(d,e)
d <- c("a", "b", "c")
e <- c(1, 2, 3)
cbind(d,e)
rbind(d,e)
h <- rbind(d,e)
is.data.frame(h)
h <- rbind(d,e, drop = FALSE)
is.data.frame(h)
h <- rbind(d,e)
data.frame(H)
d[1]
d[1:3]
rbind(d[1:3], e)
rbind(d[1,3,5], e)
rbind(d[1, 3, 5], e)
rbind(d[c(1, 3, 5)], e)
rbind(d[c(1, 3, 5)], e)
rbind(d[c(1, 3, 4)], e)
d[c(1, 3, 4)]
d <- c("a", "b", "c", "b", "F")
d[c(1, 3, 4)]
rbind(d[c(1, 3, 4)], e)
d[-3]
d[-3:-5]
d[3]
d[-1]
d[-(3)]
rnorm(10, sd = 10)
?seq
?seq
??seq
df <- data.frame(a = c(9,8,7), b=c(6,5,4), c(3,2,1))
df
df <- data.frame(a = c(9,8,7), b=c(6,5,4), C = c(3,2,1))
df
df[2,2]
df[[2],[2]]
df[[2][2]]
df$b[,2]
df$b[2]
df$b[{2}]
df$b[[2]]
y<-2
f<-function(x){ y <- 1; y2 + g(x)} g<-function(x) { x + y }
y<-2
function(x){ y <- 1; y2 + g(x)} g<-function(x) { x + y }
x <- list(5,"a","TRUE",list(3,4,5))
x[[3]]
typeof(x[[3]])
is.vector(x[[3]])
# Definindo o diretório
setwd("C:/Users/uniesacosta/Desktop/Minhas análises em R/Gastos dos deputados/Gastos-dos-deputados-em-2019\files")
getwd()
# Merging Multiples Csv files
library(dplyr)
library(readr)
df <- list.files(path="C:/Users/uniesacosta/Desktop/Minhas análises em R/Gastos dos deputados/Gastos-dos-deputados-em-2019\files",
full.names = TRUE) %>%
lapply(read_csv) %>%
bind_rows
# Exploring
nrow(df) # 281453
ncol(df) # 12
colnames(df)
'''
> colnames(df)
[1] "numano"            "nummes"            "datemissao"
[4] "txnomeparlamentar" "sgpartido"         "sguf"
[7] "txtdescricao"      "txtcnpjcpf"        "txtfornecedor"
[10] "vlrdocumento"      "vlrglosa"          "vlrliquido"
'''
head(df)
'''
numano nummes datemissao          txnomeparlament~ sgpartido sguf
<dbl>  <dbl> <dttm>              <chr>            <chr>     <chr>
1   2019      6 NA                  Norma Ayub       DEM       ES
2   2019      6 NA                  Fausto Pinato    PP        SP
3   2019      6 NA                  Iracema Portella PP        PI
4   2019      6 NA                  Fábio Henrique   PDT       SE
5   2019      6 NA                  Bacelar          PODE      BA
6   2019      6 NA                  Felipe Carreras  PSB       PE
# ... with 6 more variables: txtdescricao <chr>, txtcnpjcpf <chr>,
#   txtfornecedor <chr>, vlrdocumento <dbl>, vlrglosa <dbl>,
#   vlrliquido <dbl>
'''
summary(df)
str(df)
'''
> str(df)
tibble [281,453 x 12] (S3: spec_tbl_df/tbl_df/tbl/data.frame)
$ numano           : num [1:281453] 2019 2019 2019 2019 2019 ...
$ nummes           : num [1:281453] 6 6 6 6 6 6 6 6 6 6 ...
$ datemissao       : POSIXct[1:281453], format: NA NA ...
$ txnomeparlamentar: chr [1:281453] "Norma Ayub" "Fausto Pinato" "Iracema Portella" "Fábio Henrique" ...
$ sgpartido        : chr [1:281453] "DEM" "PP" "PP" "PDT" ...
$ sguf             : chr [1:281453] "ES" "SP" "PI" "SE" ...
$ txtdescricao     : chr [1:281453] "TELEFONIA" "TELEFONIA" "TELEFONIA" "TELEFONIA" ...
$ txtcnpjcpf       : chr [1:281453] "00000000000006" "00000000000006" "00000000000006" "00000000000006" ...
$ txtfornecedor    : chr [1:281453] "RAMAL" "RAMAL" "RAMAL" "RAMAL" ...
$ vlrdocumento     : num [1:281453] 109.6 24.8 124.3 162.4 86.8 ...
$ vlrglosa         : num [1:281453] 0 0 0 0 0 0 0 0 0 0 ...
$ vlrliquido       : num [1:281453] 109.6 24.8 124.3 162.4 86.8 ...
>
'''
# Columns Layout
colnames(df) <- c("Ano", "Mês", "Data da Emissão", "Parlamentar",
"Partido", "UF", "Descrição", "CPF/CNPJ do Fornecedor",
"Fornecedor", "Valor do Documento", "Valor Glosa",
"Valor Líquido")
df$`Data da Emissão` <- NULL
# Total de Gastos Por mês no ano de 2019
?aggregate
Gasto_Mes <- aggregate(df$`Valor Líquido`, by=list(Mês=df$Mês), FUN=sum)
colnames(Gasto_Mes) <- c("Mês", "Gasto Total")
Gasto_Mes # Meses com maiores gastos  (10, 8, 5, 9, 4)
Gasto_Mes[order(Gasto_Mes$`Gasto Total`, decreasing = TRUE),]
# Total de Gastos Por Partido
Gasto_partido <- aggregate(df$`Valor Líquido`, by = list(Partido = df$Partido), FUN = sum)
colnames(Gasto_partido) <- c("Partido", "Gasto Total 2019")
Gasto_partido <- Gasto_partido[order(Gasto_partido$`Gasto Total 2019`, decreasing = TRUE),]
Gasto_partido # Partidos que mais gastaram (PT, PP, PSL, PL, PSD)
# Principais Categorias de Gastos
top_Gastos <- aggregate(df$`Valor Líquido`, by = list(Descrição = df$Descrição), FUN = sum)
colnames(top_Gastos) <- c("Descrição", "Gasto Total 2019")
top_Gastos <- top_Gastos[order(top_Gastos$`Gasto Total 2019`, decreasing = TRUE),]
top_Gastos
#Principais gastos dos deputados (Emissão Bilhete Aéreo, DIVULGAÇÃO DA ATIVIDADE PARLAMENTAR)
install.packages("ggplot2")
library(ggplot2)
filter_Partido <- (df$Partido == "PT")| (df$Partido == "PP")| (df$Partido == "PSL")|
(df$Partido == "PL")| (df$Partido == "PSD")|(df$Partido == "MDB")|(df$Partido == "PSDB")|
(df$Partido == "REPUBLICANOS")| (df$Partido == "PDT")|(df$Partido == "DEM")|(df$Partido == "PSB")
df_Partido <- df[filter_Partido, ]
# Construindo vetor com top Gastos no ANO
top_gastos_vector = c("DIVULGAÇÃO DA ATIVIDADE PARLAMENTAR.",
"LOCAÇÃO OU FRETAMENTO DE VEÍCULOS AUTOMOTORES",
"MANUTENÇÃO DE ESCRITÓRIO DE APOIO À ATIVIDADE PARLAMENTAR",
"CONSULTORIAS, PESQUISAS E TRABALHOS TÉCNICOS.",
"COMBUSTÍVEIS E LUBRIFICANTES.",
"TELEFONIA",
"PASSAGENS AÉREAS",
"SERVIÇOS POSTAIS",
"HOSPEDAGEM ,EXCETO DO PARLAMENTAR NO DISTRITO FEDERAL.",
"LOCAÇÃO OU FRETAMENTO DE AERONAVES",
"FORNECIMENTO DE ALIMENTAÇÃO DO PARLAMENTAR",
"SERVIÇO DE SEGURANÇA PRESTADO POR EMPRESA ESPECIALIZADA.",
"SERVIÇO DE TÁXI, PEDÁGIO E ESTACIONAMENTO",
"ASSINATURA DE PUBLICAÇÕES",
"PASSAGENS TERRESTRES, MARÍTIMAS OU FLUVIAIS",
"LOCAÇÃO OU FRETAMENTO DE EMBARCAÇÕES",
"PARTICIPAÇÃO EM CURSO, PALESTRA OU EVENTO SIMILAR")
# Criando multiplos gráficos dos gastos por partido no ano de 2019
# Partidos em análise Top 11 Gastos sendo eles: (PT, PP, PSL, PL, PSD, MDB, PSDB, REPUBLICANOS, PDT, DEM, PSB)
setwd("C:/Users/uniesacosta/Desktop/Minhas análises em R/Gastos dos deputados/Gastos-dos-deputados-em-2019/Charts and tables")
for (i in top_gastos_vector) {
filter_is <- (df_Partido$Descrição == i)
new_df <- df_Partido[filter_is,]
u <- ggplot(data = new_df, aes(x = Partido, y = `Valor Líquido`)) +
ggtitle(i)
g <- u + geom_col(aes(fill = Partido))
pdf(paste0(i, ".pdf"))
print(g)
dev.off()
}
write.csv(Gasto_Mes, file = "Gasto_por_Mes_em_2019.csv")
write.csv(Gasto_partido, file = "Gasto_por_Partido_em_2019.csv")
write.csv(top_Gastos, file = "Top_Gastos_em_2019.csv")
# Definindo o diretório
setwd("C:/Users/uniesacosta/Desktop/Minhas análises em R/Gastos dos deputados/Gastos-dos-deputados-em-2019\files")
getwd()
# Definindo o diretório
setwd("C:/Users/uniesacosta/Desktop/Minhas análises em R/Gastos dos deputados/Gastos-dos-deputados-em-2019\files")
# Definindo o diretório
setwd("C:/Users/uniesacosta/Desktop/Minhas análises em R/Gastos dos deputados/Gastos-dos-deputados-em-2019/files")
getwd()
# Merging Multiples Csv files
library(dplyr)
library(readr)
df <- list.files(path="C:/Users/uniesacosta/Desktop/Minhas análises em R/Gastos dos deputados/Gastos-dos-deputados-em-2019/files",
full.names = TRUE) %>%
lapply(read_csv) %>%
bind_rows
# Exploring
nrow(df) # 281453
ncol(df) # 12
colnames(df)
head(df)
summary(df)
str(df)
colnames(df) <- c("Ano", "Mês", "Data da Emissão", "Parlamentar",
"Partido", "UF", "Descrição", "CPF/CNPJ do Fornecedor",
"Fornecedor", "Valor do Documento", "Valor Glosa",
"Valor Líquido")
df$`Data da Emissão` <- NULL
# Total de Gastos Por mês no ano de 2019
?aggregate
Gasto_Mes <- aggregate(df$`Valor Líquido`, by=list(Mês=df$Mês), FUN=sum)
colnames(Gasto_Mes) <- c("Mês", "Gasto Total")
Gasto_Mes # Meses com maiores gastos  (10, 8, 5, 9, 4)
Gasto_Mes[order(Gasto_Mes$`Gasto Total`, decreasing = TRUE),]
# Total de Gastos Por Partido
Gasto_partido <- aggregate(df$`Valor Líquido`, by = list(Partido = df$Partido), FUN = sum)
colnames(Gasto_partido) <- c("Partido", "Gasto Total 2019")
Gasto_partido <- Gasto_partido[order(Gasto_partido$`Gasto Total 2019`, decreasing = TRUE),]
Gasto_partido # Partidos que mais gastaram (PT, PP, PSL, PL, PSD)
# Principais Categorias de Gastos
top_Gastos <- aggregate(df$`Valor Líquido`, by = list(Descrição = df$Descrição), FUN = sum)
colnames(top_Gastos) <- c("Descrição", "Gasto Total 2019")
top_Gastos <- top_Gastos[order(top_Gastos$`Gasto Total 2019`, decreasing = TRUE),]
top_Gastos
install.packages("ggplot2")
library(ggplot2)
filter_Partido <- (df$Partido == "PT")| (df$Partido == "PP")| (df$Partido == "PSL")|
(df$Partido == "PL")| (df$Partido == "PSD")|(df$Partido == "MDB")|(df$Partido == "PSDB")|
(df$Partido == "REPUBLICANOS")| (df$Partido == "PDT")|(df$Partido == "DEM")|(df$Partido == "PSB")
df_Partido <- df[filter_Partido, ]
top_gastos_vector = c("DIVULGAÇÃO DA ATIVIDADE PARLAMENTAR.",
"LOCAÇÃO OU FRETAMENTO DE VEÍCULOS AUTOMOTORES",
"MANUTENÇÃO DE ESCRITÓRIO DE APOIO À ATIVIDADE PARLAMENTAR",
"CONSULTORIAS, PESQUISAS E TRABALHOS TÉCNICOS.",
"COMBUSTÍVEIS E LUBRIFICANTES.",
"TELEFONIA",
"PASSAGENS AÉREAS",
"SERVIÇOS POSTAIS",
"HOSPEDAGEM ,EXCETO DO PARLAMENTAR NO DISTRITO FEDERAL.",
"LOCAÇÃO OU FRETAMENTO DE AERONAVES",
"FORNECIMENTO DE ALIMENTAÇÃO DO PARLAMENTAR",
"SERVIÇO DE SEGURANÇA PRESTADO POR EMPRESA ESPECIALIZADA.",
"SERVIÇO DE TÁXI, PEDÁGIO E ESTACIONAMENTO",
"ASSINATURA DE PUBLICAÇÕES",
"PASSAGENS TERRESTRES, MARÍTIMAS OU FLUVIAIS",
"LOCAÇÃO OU FRETAMENTO DE EMBARCAÇÕES",
"PARTICIPAÇÃO EM CURSO, PALESTRA OU EVENTO SIMILAR")
setwd("C:/Users/uniesacosta/Desktop/Minhas análises em R/Gastos dos deputados/Gastos-dos-deputados-em-2019/Charts and tables")
for (i in top_gastos_vector) {
filter_is <- (df_Partido$Descrição == i)
new_df <- df_Partido[filter_is,]
u <- ggplot(data = new_df, aes(x = Partido, y = `Valor Líquido`)) +
ggtitle(i)
g <- u + geom_col(aes(fill = Partido))
pdf(paste0(i, ".pdf"))
print(g)
dev.off()
}
for (i in top_gastos_vector) {
filter_is <- (df_Partido$Descrição == i)
new_df <- df_Partido[filter_is,]
u <- ggplot(data = new_df, aes(x = Partido, y = `Valor Líquido`)) +
ggtitle(i)
g <- u + geom_col(aes(fill = Partido), alpha  = 0.5)
pdf(paste0(i, ".pdf"))
print(g)
dev.off()
}
for (i in top_gastos_vector) {
filter_is <- (df_Partido$Descrição == i)
new_df <- df_Partido[filter_is,]
u <- ggplot(data = new_df, aes(x = Partido, y = `Valor Líquido`)) +
ggtitle(i)
g <- u + geom_col(aes(fill = Partido))
png(paste0(i, ".png"))
print(g)
dev.off()
}
